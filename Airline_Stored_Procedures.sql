--Register customer
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE Register_Customer(FN IN CUSTOMER.FIRSTNAME%type, LN IN CUSTOMER.LASTNAME%type,ADDRESS IN VARCHAR2,
                                              CITY IN CUSTOMER.CITY%type, STATE IN CUSTOMER.STATE%type, PHONE IN CUSTOMER.MOBILENUMBER%type)
IS
ID CUSTOMER.CUSTOMERID%TYPE;
BEGIN
  ID:= TEST_SEQ.NEXTVAL; /*REMEMBER TO CREATE SEQUENCE CALLED TEST_SEQ*/
  INSERT INTO CUSTOMER(CUSTOMERID,FIRSTNAME,LASTNAME,STREETADDRESS,CITY,STATE,MOBILENUMBER)
  VALUES(ID,FN,LN,ADDRESS,CITY,STATE,PHONE);
  DBMS_OUTPUT.PUT_LINE('The new customer has been successfully registered, Customer ID is:' || ID);
END;  

execute REGISTER_CUSTOMER('Stephanie','Apple','20 Starr St','Brooklyn','NY','1112223333') /*REMEMBER TO MAKE SURE MISSING DETAILS ARE NULLABLE*/;

--Find flight
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE Find_Flight(SRC IN FLIGHT.AIRPORTID%type,DST IN FLIGHT.DESTINATIONID%type,DT IN FLIGHT.FLIGHTDATE%type)
IS
V_FLIGHT FLIGHT.FLIGHTID%type;
V_SOURCE FLIGHT.AIRPORTID%type;
V_DESTINATION FLIGHT.DESTINATIONID%type;
V_FARE FLIGHT.FARE%type;
V_DATE FLIGHT.FLIGHTDATE%TYPE;
V_OPENSEATING FLIGHT.REMAINING_SEATS%TYPE;

CURSOR CUR_FLIGHTS IS
   SELECT *
   FROM FLIGHT
   WHERE AIRPORTID = SRC AND DESTINATIONID = DST AND FLIGHTDATE = DT;
BEGIN
  OPEN CUR_FLIGHTS;
   LOOP
    FETCH CUR_FLIGHTS INTO V_FLIGHT,V_SOURCE,V_DESTINATION,V_FARE,V_DATE,V_OPENSEATING;
    EXIT WHEN CUR_FLIGHTS%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('FLIGHTSID: '|| V_FLIGHT || ' SOURCE: ' || V_SOURCE || ' DESTINATION: ' || V_DESTINATION || ' FARE: $' || V_FARE || 
                         ' DATE: ' || V_DATE || ' AVAILABLE SEATING: ' || V_OPENSEATING);
   END LOOP;
  CLOSE CUR_FLIGHTS;
END;

execute FIND_FLIGHT('AA1','CC1','10-OCT-18');

--Making a reservation
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE MAKE_A_RESERVATION(CUSTID IN RESERVATION.CUSTOMERID%type, FLYID IN RESERVATION.FLIGHTID%type,
                                               SEATS IN RESERVATION.SEATS_CONFIRMED%type)
IS
CONF RESERVATION.CONFIRMATIONID%TYPE;
BEGIN
 CONF:= TEST_SEQ.NEXTVAL;
 INSERT INTO RESERVATION(CONFIRMATIONID,CUSTOMERID,FLIGHTID,SEATS_CONFIRMED)
 VALUES(CONF,CUSTID,FLYID,SEATS);
 DBMS_OUTPUT.PUT_LINE('The customer ' || CUSTID || ' has made a reservation on flight ' || FLYID || ' with ' || SEATS || ' seats confirmed. Your confirmation number is ' || CONF || ' ');
END; 

EXECUTE MAKE_A_RESERVATION('4','5','3');

--View customer reservation
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE View_Customer_Reservation(CUSTID IN RESERVATION.CUSTOMERID%type)
IS
V_CONF RESERVATION.CONFIRMATIONID%TYPE;
V_FN CUSTOMER.FIRSTNAME%TYPE;
V_LN CUSTOMER.LASTNAME%TYPE;
V_FLID RESERVATION.FLIGHTID%TYPE;
V_SEATS RESERVATION.SEATS_CONFIRMED%TYPE;

CURSOR CUR_CUSRES IS
  SELECT RESERVATION.CONFIRMATIONID,CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,RESERVATION.FLIGHTID,RESERVATION.SEATS_CONFIRMED 
  FROM RESERVATION,CUSTOMER
  WHERE CUSTOMER.CUSTOMERID = CUSTID AND CUSTOMER.CUSTOMERID = RESERVATION.CUSTOMERID;
BEGIN
 OPEN CUR_CUSRES;
  LOOP
    FETCH CUR_CUSRES INTO V_CONF,V_FN,V_LN,V_FLID,V_SEATS;
    EXIT WHEN CUR_CUSRES%NOTFOUND; 
    DBMS_OUTPUT.PUT_LINE('CONFIMATION NUMBER: ' || V_CONF || ' NAME: ' || V_FN || ' ' || V_LN || 
                         ' FLIGHTID: ' || V_FLID || ' SEATS CONFIRMED: ' || V_SEATS);
  END LOOP;                       
END;

EXECUTE VIEW_CUSTOMER_RESERVATION('4');

--Admin Functions
--View flight details
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE VIEW_FLIGHT_DETAILS(LCT IN FLIGHT.AIRPORTID%type)
IS
V_FID FLIGHT.FLIGHTID%TYPE;
V_DST FLIGHT.DESTINATIONID%TYPE;
V_FARE FLIGHT.FARE%TYPE;
V_DATE FLIGHT.FLIGHTDATE%TYPE;
V_SEATING FLIGHT.REMAINING_SEATS%TYPE;
 CURSOR CUR_DETAILS IS
  SELECT FLIGHTID,DESTINATIONID,FARE,FLIGHTDATE,REMAINING_SEATS
  FROM FLIGHT
  WHERE AIRPORTID = LCT;
BEGIN
 OPEN CUR_DETAILS;
  LOOP
   FETCH CUR_DETAILS INTO V_FID,V_DST,V_FARE,V_DATE,V_SEATING;
   EXIT WHEN CUR_DETAILS%NOTFOUND;
   DBMS_OUTPUT.PUT_LINE('FLIGHTID: ' || V_FID || ' DESTINATION: ' || V_DST || ' FARE: ' || V_FARE || ' DATE: ' || V_DATE || 
                        ' SEATING AVAILABLE: ' || V_SEATING);
  END LOOP;
 CLOSE CUR_DETAILS;
END; 

EXECUTE VIEW_FLIGHT_DETAILS('AA1');

--UPDATE FARE
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE UPDATE_FARE(FID IN FLIGHT.FLIGHTID%TYPE,NF IN FLIGHT.FARE%TYPE)
IS
BEGIN
 UPDATE FLIGHT
 SET FARE = NF
 WHERE FLIGHTID = FID;
 DBMS_OUTPUT.PUT_LINE('The fare for flight ' || FID || ' has been updated to ' || NF);
END; 

EXECUTE UPDATE_FARE('6','450');

--reservations on one flight
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE RESERVATIONS_ON_FLIGHT(FID IN RESERVATION.FLIGHTID%TYPE)
IS
V_CONF RESERVATION.CONFIRMATIONID%TYPE;
V_CUST RESERVATION.CUSTOMERID%TYPE;
V_SEATS RESERVATION.SEATS_CONFIRMED%TYPE;
 CURSOR CUR_V_RES IS
  SELECT CONFIRMATIONID,CUSTOMERID,SEATS_CONFIRMED
  FROM RESERVATION
  WHERE FLIGHTID = FID;
BEGIN
  OPEN CUR_V_RES;
   LOOP
    FETCH CUR_V_RES INTO V_CONF,V_CUST,V_SEATS;
    EXIT WHEN CUR_V_RES%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('Current reservations of flight ' || FID || ' include-- ConfirmationnNum: ' || V_CONF || ' CustomerID: ' || V_CUST || 
    '  with seats confirmed at ' || V_SEATS);
   END LOOP;
  CLOSE CUR_V_RES;
END;  

EXECUTE RESERVATIONS_ON_FLIGHT('5');

--VIEW CUSTOMER
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE VIEW_CUSTOMER(CUSTID IN CUSTOMER.CUSTOMERID%TYPE)
IS
FN CUSTOMER.FIRSTNAME%TYPE;
LN CUSTOMER.LASTNAME%TYPE;
ADDR CUSTOMER.STREETADDRESS%TYPE;
CT CUSTOMER.CITY%TYPE;
ST CUSTOMER.STATE%TYPE;
CNT CUSTOMER.COUNTRY%TYPE;
ZIP CUSTOMER.ZIPCODE%TYPE;
PN CUSTOMER.MOBILENUMBER%TYPE;
EML CUSTOMER.EMAIL%TYPE;

BEGIN
 SELECT FIRSTNAME,LASTNAME,STREETADDRESS,CITY,STATE,COUNTRY,ZIPCODE,MOBILENUMBER,EMAIL INTO FN,LN,ADDR,CT,ST,CNT,ZIP,PN,EML
 FROM CUSTOMER
 WHERE CUSTOMERID = CUSTID;
 DBMS_OUTPUT.PUT_LINE('NAME: ' || FN|| ' ' || LN || ' ADDRESS: ' || ADDR || ' ' || CT || ',' || ST || ' ' || CNT || ' ' || ZIP || ' PHONE: ' 
                      || PN || ' EMAIL: ' || EML);
END;                      

EXECUTE VIEW_CUSTOMER('A01');

--ADD A NEW FLIGHT
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE ADD_FLIGHT(FLID IN FLIGHT.FLIGHTID%TYPE, SRC IN FLIGHT.AIRPORTID%TYPE, DST IN FLIGHT.DESTINATIONID%TYPE,
                                       FARE IN FLIGHT.FARE%TYPE, FDATE IN FLIGHT.FLIGHTDATE%TYPE, SEATS IN FLIGHT.REMAINING_SEATS%TYPE)
IS
BEGIN
 INSERT INTO FLIGHT
 VALUES(FLID,SRC,DST,FARE,FDATE,SEATS);
 DBMS_OUTPUT.PUT_LINE('Flight ' || FLID || ' has been successfully added to available flights.');
END;

EXECUTE ADD_FLIGHT('1010','AA1','CC1','450','10-OCT-18','50');
